#!/usr/bin/env bash
# aws-create-update-secret - Create or update an AWS Secrets Manager secret
# 
# This script is only used the first time we create a secret.
# It's part of a bootstrap process, or when a new application is added.

set -e -o pipefail -u
[ x"${DEBUG:-}" = "x1" ] && set -x

# description
# tags
_usage () {
    echo "Usage: $0 KEY VALUE [OPTIONS]"
    echo "       $0 --interactive"
    echo ""
    echo "Uses AWS Secrets Manager to store VALUE secret in KEY."
    echo "Creates the secret if it doesn't exist, otherwise, updates it."
    echo ""
    echo "Options:"
    echo "  --description TEXT      Adds a descrption to the secret"
    echo "  --tags JSON             Adds a set of tags based on JSON parameters."
    echo "                          This option ONLY works on secret creation, NOT update."
    echo "                          See the 'aws secretsmanager create-secret' help page."
    echo "Example:"
    echo '  ./aws-assume-admin-role ./aws-create-secret app/some/path "`cat secret.txt`"'
    exit 1
}

if [ $# -eq 1 ] ; then
    if [ "$1" = "--interactive" ] ; then
        shift # remove '--interactive'
        read -r -p "What is the key to use? " SECRET_KEY
        read -r -p "What is the value to use? " SECRET_VALUE
    else
        _usage
    fi
elif [ $# -ne 2 ] ; then
    _usage
else
    SECRET_KEY="$1"
    SECRET_VALUE="$2"
    shift 2
fi

if [ -z "$SECRET_KEY" ] || [ -z "$SECRET_VALUE" ] ; then
    echo "$0: Error: refusing to use an empty KEY or VALUE"
    exit 1
fi

if ! aws secretsmanager describe-secret --secret-id "$SECRET_KEY" >/dev/null ; then
    aws secretsmanager create-secret --name "$SECRET_KEY" --secret-string "$SECRET_VALUE" $@
else
    aws secretsmanager update-secret --secret-id "$SECRET_KEY" --secret-string "$SECRET_VALUE" $@
fi
