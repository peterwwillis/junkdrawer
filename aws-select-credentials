#!/usr/bin/env bash
# aws-select-credentials - Use 'dialog' to select cached AWS credentials and export it into your current shell
# Copyright (C) 2022  Peter Willis
# 
# Assuming this script is in your PATH, simply run:
#   $ `aws-select-credentials`
# or:
#   $ . aws-select-credentials

[ "${DEBUG:-0}" = "1" ] && set -x

_cleanup () {
    [ -n "$_TMP" ] && rm -rf "$_TMP"
} ; trap _cleanup EXIT

_list_credentials () {
    local credname
    while read -r line ; do
        case "$line" in
            \[*\])  
                    credname="${line#[}" ;
                    credname="${credname%]}" ;
                    creds+=("$credname") ;;
            aws_access_key_id*)
                    keys[$credname]="$(printf "%s\n" "$line" | sed -e 's/^aws_access_key_id[[:blank:]]\+=[[:blank:]]*//g')" ;;
            aws_secret_access_key*)
                    secrets[$credname]="$(printf "%s\n" "$line" | sed -e 's/^aws_secret_access_key[[:blank:]]\+=[[:blank:]]*//g')" ;;
            aws_session_token*)
                    sessions[$credname]="$(printf "%s\n" "$line" | sed -e 's/^aws_session_token[[:blank:]]\+=[[:blank:]]*//g')" ;;
        esac
    done < ~/.aws/credentials
}

_select_credential () {
    if [ -n "${AWS_SELECTED_CREDENTIALS:-}" ] && [ ! "${FORCE:-0}" = "1" ] ; then
        selected="${AWS_SELECTED_CREDENTIALS}"
    else
        declare -a credentials=()
        for c in "${creds[@]}" ; do
            credentials+=("$c" "$c")
        done
        _TMP=$(mktemp)
        dialog --stdout --backtitle "AWS Credentials" --menu "Select some AWS credentials to export" 25 80 20 "${credentials[@]}" > "$_TMP"
        selected="$(cat "$_TMP")"
    fi
}

_select_region () {
    if [ -z "${AWS_DEFAULT_REGION}" ] && [ -z "${AWS_REGION:-}" ] ; then
        declare -a regions=()
        for region in eu-north-1 ap-south-1 eu-west-3 eu-west-2 eu-west-1 ap-northeast-3 ap-northeast-2 ap-northeast-1 sa-east-1 ca-central-1 ap-southeast-1 ap-southeast-2 eu-central-1 us-east-1 us-east-2 us-west-1 us-west-2
        do
            regions+=("$region" "$region")
        done
        dialog --stdout --backtitle "AWS Region" --menu "Select a default AWS Region" 25 80 20 "${regions[@]}" > "$_TMP"
        selected_region="$(cat "$_TMP")"
    fi
}

_unset_credential () {
    unset AWS_SELECTED_CREDENTIALS AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN
    echo "unset AWS_SELECTED_CREDENTIALS AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN"
}

declare -a creds=()
declare -A keys=() secrets=() sessions=()
_list_credentials

FORCE=0 UNSET=0
while getopts "fu" args ; do
    case "$args" in
        f)
                FORCE=1 ;;
        u)
                UNSET=1 ;;
    esac
done
shift $((OPTIND-1))

if [ "$UNSET" = "1" ] ; then

    _unset_credential

else

    _select_credential

    export AWS_SELECTED_CREDENTIALS="$selected"
    export AWS_ACCESS_KEY_ID="${keys[$selected]}"
    export AWS_SECRET_ACCESS_KEY="${secrets[$selected]}"
    export AWS_SESSION_TOKEN="${sessions[$selected]}"

    echo "export AWS_SELECTED_CREDENTIALS=$selected"
    echo "export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID"
    echo "export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY"
    echo "export AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN"

    _select_region

    if [ -n "${selected_region:-}" ] ; then
        export AWS_DEFAULT_REGION="$selected_region"
        echo "export AWS_DEFAULT_REGION=$selected_region"
    fi

fi
